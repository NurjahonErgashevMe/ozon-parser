"""
–í–∫–ª–∞–¥–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
"""
import tkinter as tk
from tkinter import ttk, messagebox, scrolledtext
import threading
import logging

logger = logging.getLogger(__name__)

class ControlTab:
    """–í–∫–ª–∞–¥–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä—Å–∏–Ω–≥–æ–º –∏ –±–æ—Ç–æ–º"""
    
    def __init__(self, parent, app_manager):
        self.parent = parent
        self.app_manager = app_manager
        self.main_window = None
        
        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å–∞
        self.bot_status_var = tk.StringVar(value="üî¥ –ù–µ –∑–∞–ø—É—â–µ–Ω")
        
        self.create_widgets()
    
    def create_widgets(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤ –≤–∫–ª–∞–¥–∫–∏"""
        self.frame = ttk.Frame(self.parent)
        
        # –°—Ç–∞—Ç—É—Å
        status_group = ttk.LabelFrame(self.frame, text="üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞", padding=15)
        status_group.pack(fill=tk.X, padx=10, pady=10)
        
        ttk.Label(status_group, text="Telegram –±–æ—Ç:", font=('Arial', 14, 'bold')).grid(row=0, column=0, sticky=tk.W, pady=5)
        ttk.Label(status_group, textvariable=self.bot_status_var, font=('Arial', 14)).grid(row=0, column=1, sticky=tk.W, padx=(10, 0), pady=5)
        

        
        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º
        bot_group = ttk.LabelFrame(self.frame, text="ü§ñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º", padding=15)
        bot_group.pack(fill=tk.X, padx=10, pady=20)
        
        bot_buttons_frame = ttk.Frame(bot_group)
        bot_buttons_frame.pack(fill=tk.X)
        
        self.start_bot_btn = ttk.Button(bot_buttons_frame, text="‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞", 
                                       command=self._start_bot)
        self.start_bot_btn.pack(side=tk.LEFT, padx=5)
        
        self.stop_bot_btn = ttk.Button(bot_buttons_frame, text="‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞", 
                                      command=self._stop_bot, state=tk.DISABLED)
        self.stop_bot_btn.pack(side=tk.LEFT, padx=5)
        
        self.restart_bot_btn = ttk.Button(bot_buttons_frame, text="üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞", 
                                         command=self._restart_bot, state=tk.DISABLED)
        self.restart_bot_btn.pack(side=tk.LEFT, padx=5)
    
    def get_frame(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—Ä–µ–π–º –≤–∫–ª–∞–¥–∫–∏"""
        return self.frame
    
    def update_status(self, status_data):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞"""
        try:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
            if status_data.get('telegram_bot_active'):
                self.bot_status_var.set("üü¢ –ó–∞–ø—É—â–µ–Ω")
                self.start_bot_btn.config(state=tk.DISABLED)
                self.stop_bot_btn.config(state=tk.NORMAL)
                self.restart_bot_btn.config(state=tk.NORMAL)
            else:
                self.bot_status_var.set("üî¥ –ù–µ –∑–∞–ø—É—â–µ–Ω")
                self.start_bot_btn.config(state=tk.NORMAL)
                self.stop_bot_btn.config(state=tk.DISABLED)
                self.restart_bot_btn.config(state=tk.DISABLED)
                
        except Exception as e:
            logger.debug(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {e}")
    

    
    def set_main_window(self, main_window):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ"""
        self.main_window = main_window
    

    

    

    
    def _start_bot(self):
        """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞"""
        def start_async():
            try:
                if not self.main_window:
                    messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
                    return
                
                config = self.main_window.get_config_data()
                bot_token = config.get('bot_token')
                user_ids = config.get('user_ids', [])
                
                if not bot_token or not user_ids:
                    messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ User ID –Ω–∞ –≤–∫–ª–∞–¥–∫–µ '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è'")
                    return
                
                success = self.app_manager.start_telegram_bot(bot_token, user_ids)
                
                if success:
                    messagebox.showinfo("–£—Å–ø–µ—Ö", "Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
                else:
                    messagebox.showerror("–û—à–∏–±–∫–∞", "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞")
                    
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞: {e}")
        
        threading.Thread(target=start_async, daemon=True).start()
    
    def _stop_bot(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Telegram –±–æ—Ç–∞"""
        try:
            self.app_manager.stop_telegram_bot()
            messagebox.showinfo("–£—Å–ø–µ—Ö", "Telegram –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞: {e}")
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞: {e}")
    
    def _restart_bot(self):
        """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞"""
        def restart_async():
            try:
                # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞
                self.app_manager.stop_telegram_bot()
                
                if not self.main_window:
                    messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
                    return
                
                config = self.main_window.get_config_data()
                bot_token = config.get('bot_token')
                user_ids = config.get('user_ids', [])
                
                if not bot_token or not user_ids:
                    messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ User ID –Ω–∞ –≤–∫–ª–∞–¥–∫–µ '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è'")
                    return
                
                # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–Ω–æ–≤–æ
                success = self.app_manager.start_telegram_bot(bot_token, user_ids)
                
                if success:
                    messagebox.showinfo("–£—Å–ø–µ—Ö", "Telegram –±–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω")
                else:
                    messagebox.showerror("–û—à–∏–±–∫–∞", "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞")
                    
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞: {e}")
        
        threading.Thread(target=restart_async, daemon=True).start()