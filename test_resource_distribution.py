#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.utils.resource_manager import ResourceManager

def test_resource_distribution():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    
    print("üß™ –¢–µ—Å—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞
    rm = ResourceManager()
    
    print(f"üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"   –ú–∞–∫—Å –≤–æ—Ä–∫–µ—Ä–æ–≤ –≤—Å–µ–≥–æ: {rm.MAX_TOTAL_WORKERS}")
    print(f"   –ú–∞–∫—Å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {rm.MAX_WORKERS_PER_USER}")
    print(f"   –ú–∏–Ω –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {rm.MIN_WORKERS_PER_USER}")
    print()
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –û–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    print("üìã –°—Ü–µ–Ω–∞—Ä–∏–π 1: –û–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∞—Ä—Å–∏—Ç 500 —Ç–æ–≤–∞—Ä–æ–≤")
    workers1 = rm.start_parsing_session("user1", "products", 500)
    print(f"   User1 –ø–æ–ª—É—á–∏–ª: {workers1} –≤–æ—Ä–∫–µ—Ä–æ–≤")
    status = rm.get_status()
    print(f"   –í—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: {status['total_allocated_workers']}/{rm.MAX_TOTAL_WORKERS}")
    print()
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –í—Ç–æ—Ä–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è
    print("üìã –°—Ü–µ–Ω–∞—Ä–∏–π 2: –í—Ç–æ—Ä–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—á–∏–Ω–∞–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ 300 —Ç–æ–≤–∞—Ä–æ–≤")
    workers2 = rm.start_parsing_session("user2", "products", 300)
    print(f"   User2 –ø–æ–ª—É—á–∏–ª: {workers2} –≤–æ—Ä–∫–µ—Ä–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    workers1_new = rm.get_user_workers("user1")
    print(f"   User1 —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç: {workers1_new} –≤–æ—Ä–∫–µ—Ä–æ–≤ (–±—ã–ª–æ {workers1})")
    
    status = rm.get_status()
    print(f"   –í—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: {status['total_allocated_workers']}/{rm.MAX_TOTAL_WORKERS}")
    print()
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 3: –¢—Ä–µ—Ç–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è
    print("üìã –°—Ü–µ–Ω–∞—Ä–∏–π 3: –¢—Ä–µ—Ç–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—á–∏–Ω–∞–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ 100 —Ç–æ–≤–∞—Ä–æ–≤")
    workers3 = rm.start_parsing_session("user3", "sellers", 100)
    print(f"   User3 –ø–æ–ª—É—á–∏–ª: {workers3} –≤–æ—Ä–∫–µ—Ä–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö
    workers1_final = rm.get_user_workers("user1")
    workers2_final = rm.get_user_workers("user2")
    
    print(f"   User1 —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç: {workers1_final} –≤–æ—Ä–∫–µ—Ä–æ–≤")
    print(f"   User2 —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç: {workers2_final} –≤–æ—Ä–∫–µ—Ä–æ–≤")
    print(f"   User3 –∏–º–µ–µ—Ç: {workers3} –≤–æ—Ä–∫–µ—Ä–æ–≤")
    
    status = rm.get_status()
    print(f"   –í—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: {status['total_allocated_workers']}/{rm.MAX_TOTAL_WORKERS}")
    print()
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 4: –ü–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É
    print("üìã –°—Ü–µ–Ω–∞—Ä–∏–π 4: User1 –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –ø–∞—Ä—Å–∏–Ω–≥—É –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ (50 –ø—Ä–æ–¥–∞–≤—Ü–æ–≤)")
    workers1_sellers = rm.start_parsing_session("user1", "sellers", 50)
    print(f"   User1 –ø–æ–ª—É—á–∏–ª –¥–ª—è sellers: {workers1_sellers} –≤–æ—Ä–∫–µ—Ä–æ–≤")
    
    status = rm.get_status()
    print(f"   –í—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: {status['total_allocated_workers']}/{rm.MAX_TOTAL_WORKERS}")
    print()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    print("üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å:")
    status = rm.get_status()
    for user_id, session_info in status['sessions'].items():
        print(f"   {user_id}: {session_info['workers']} –≤–æ—Ä–∫–µ—Ä–æ–≤, —ç—Ç–∞–ø: {session_info['stage']}")
    
    print()
    print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    test_resource_distribution()